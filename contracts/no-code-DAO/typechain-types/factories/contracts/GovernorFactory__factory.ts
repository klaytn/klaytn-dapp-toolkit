/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GovernorFactory,
  GovernorFactoryInterface,
} from "../../contracts/GovernorFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "timelock",
        type: "address",
      },
    ],
    name: "GovernorCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_governorPreset",
        type: "address",
      },
    ],
    name: "addGovernorPreset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_voteTokenPresets",
        type: "address",
      },
    ],
    name: "addVoteTokenPreset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_governorPreset",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_governorInitializeData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_voteTokenPreset",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_voteTokenInitializeData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timelockMinDelay",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "timelockProposers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "timelockExecutors",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "timelockAdmin",
            type: "address",
          },
        ],
        internalType: "struct GovernorFactory.TimelockInitializeParams",
        name: "_timelockParams",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createGovernor",
    outputs: [
      {
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "timelock",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllGovernorPresets",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVoteTokenPresets",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getGovernorPresetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getVoteTokenPresetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "governors",
    outputs: [
      {
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "timelock",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_timelockController",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_governorPreset",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "predictGovernorDeterministicAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "predictTimelockDeterministicAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_voteTokenPreset",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "predictVoteTokenDeterministicAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelockController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052346200003657620000146200003b565b604051612481620000938239608051818181610afa0152610c3d015261248190f35b600080fd5b6200004562000082565b565b6200005d9062000060906001600160a01b031682565b90565b6001600160a01b031690565b6200005d9062000047565b6200005d906200006c565b6200008d3062000077565b60805256fe6080604052600436101561001257600080fd5b60003560e01c806318580509146101525780632d4af4631461014d5780633659cfe6146101485780634f1ef2861461014357806352d1902d1461013e578063685e6f3814610139578063715018a614610134578063853da5801461012f5780638da5cb5b1461012a57806391972d8314610125578063a7277b0014610120578063ab085d871461011b578063b91c299614610116578063c4d66de814610111578063d4f309db1461010c578063d8c5d98314610107578063eb7c1d5314610102578063f2fde38b146100fd578063f3388e75146100f85763f704dc07036101865761083d565b610822565b6107e6565b6107d6565b6107bd565b610795565b6106b2565b610696565b61067d565b61061e565b61056d565b610548565b610521565b61042b565b61040f565b6103bb565b61039c565b610284565b610239565b6101eb565b909182601f83011215610186578135916001600160401b03831161018657602001926001830284011161018657565b600080fd5b805b0361018657565b905035906101a18261018b565b565b916040838303126101865782356001600160401b038111610186576101cd836101d8928601610157565b939094602001610194565b90565b6001600160a01b031690565b9052565b34610186576102216102076102013660046101a3565b91611d12565b604051918291826001600160a01b03909116815260200190565b0390f35b90602082820312610186576101d891610194565b346101865761022161020761024f366004610225565b611d20565b6001600160a01b03811661018d565b905035906101a182610254565b90602082820312610186576101d891610263565b346101865761029c610297366004610270565b610cfe565b604051005b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176102d857604052565b6102a1565b906101a16102ea60405190565b92836102b7565b6001600160401b0381116102d857602090601f01601f19160190565b0190565b90826000939282370152565b9092919261033261032d826102f1565b6102dd565b93818552602085019082840111610186576101a192610311565b9080601f83011215610186578160206101d89335910161031d565b9190916040818403126101865761037e8382610263565b9260208201356001600160401b038111610186576101d8920161034c565b61029c6103aa366004610367565b90611145565b600091031261018657565b34610186576103cb3660046103b0565b6102216103d6610b5c565b6040519182918290815260200190565b906020828203126101865781356001600160401b0381116101865761040b9201610157565b9091565b34610186576102216102076104253660046103e6565b90611eee565b346101865761043b3660046103b0565b61029c610890565b60005b8381106104565750506000910152565b8181015183820152602001610446565b61048761049060209361030d9361047b815190565b80835293849260200190565b95869101610443565b601f01601f191690565b906101d891610466565b906104ba6104b0835190565b8083529160200190565b90816104cc6020830284019460200190565b926000915b8383106104e057505050505090565b909192939460206105036104fc8385600195038752895161049a565b9760200190565b93019301919392906104d1565b60208082526101d8929101906104a4565b34610186576105313660046103b0565b61022161053c611e3c565b60405191829182610510565b34610186576105583660046103b0565b6102216102076033546001600160a01b031690565b34610186576102216102076105833660046103e6565b90611eb3565b6101d86101d86101d89290565b906105a090610589565b600052602052604060002090565b6105b99060d3610596565b80546001600160a01b0316916101d860026105de60018501546001600160a01b031690565b9301546001600160a01b031690565b6001600160a01b039182168152911660208201526060810192916101a1916040905b01906001600160a01b03169052565b3461018657610221610639610634366004610225565b6105ae565b604051919391938493846105ed565b916040838303126101865782356001600160401b03811161018657610672836101d8928601610157565b939094602001610263565b346101865761029c610690366004610648565b916115d0565b34610186576102216102076106ac3660046101a3565b91611c97565b346101865761029c6106c5366004610270565b6113dd565b908160809103126101865790565b919060c0838203126101865782356001600160401b0381116101865781610700918501610157565b92909360208101356001600160401b0381116101865783610722918301610157565b92909360408301356001600160401b0381116101865781610744918501610157565b92909360608101356001600160401b0381116101865783610766918301610157565b9290936080830135906001600160401b0382116101865761078c816101d89386016106ca565b9360a001610194565b34610186576102216106396107ab3660046106d8565b9897909796919695929594939461198a565b346101865761029c6107d0366004610648565b9161161c565b346101865761029c3660046103b0565b346101865761029c6107f9366004610270565b6109b1565b6101d8916008021c6101db565b906101d891546107fe565b6101d8600060d161080b565b34610186576108323660046103b0565b610221610207610816565b346101865761084d3660046103b0565b61022161053c611dcf565b6108606108ec565b6101a161087e565b6101db6101d86101d89290565b6101d890610868565b6101a161088b6000610875565b610a10565b6101a1610858565b1561089f57565b60405162461bcd60e51b8152806108e8600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6101a16109016033546001600160a01b031690565b61091a61090d336101db565b916001600160a01b031690565b14610898565b6101a19061092c6108ec565b61098c565b1561093857565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6101a19061088b6109a06101db6000610875565b6001600160a01b0383161415610931565b6101a190610920565b906001600160a01b03905b9181191691161790565b6101d8906101db906001600160a01b031682565b6101d8906109cf565b6101d8906109e3565b90610a056101d8610a0c926109ec565b82546109ba565b9055565b6033546001600160a01b031690610a288160336109f5565b610a5b610a557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936109ec565b916109ec565b91610a6560405190565b600090a3565b15610a7257565b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b6101d890610b25610aed306109ec565b610b1f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661090d565b14610a6b565b610b53565b6101d87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610589565b506101d8610b2a565b6101d86000610add565b15610b6d57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610bce57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b6101a190610c98610c38306109ec565b610c777f000000000000000000000000000000000000000000000000000000000000000091610c7061090d846001600160a01b031690565b1415610b66565b610c9261090d610c85610d07565b926001600160a01b031690565b14610bc7565b610cd7565b90610caa61032d836102f1565b918252565b369037565b906101a1610cca610cc484610c9d565b936102f1565b601f190160208401610caf565b6101a190610ce481611493565b600090610cf8610cf383610589565b610cb4565b90610dee565b6101a190610c28565b6101d86000610d176101d8610b2a565b01546001600160a01b031690565b6101d87f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143610589565b6101d8905b60ff1690565b6101d89054610d4e565b905051906101a18261018b565b90602082820312610186576101d891610d63565b6040513d6000823e3d90fd5b15610d9757565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9190610e066000610e006101d8610d25565b01610d59565b15610e165750506101a190610f6f565b610e446020610e2c610e27866109ec565b6109ec565b6352d1902d90610e3b60405190565b93849260e01b90565b825260049082905afa60009181610edd575b50610eb8575060405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b92610ed86101a194610ed2610ece6101d8610b2a565b9190565b14610d90565b610f97565b610eff91925060203d8111610f06575b610ef781836102b7565b810190610d70565b9038610e56565b503d610eed565b15610f1457565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b6101a190610f84610f7f8261114f565b610f0d565b6000610f916101d8610b2a565b016109f5565b91610fa183610fd6565b8151610fb0610ece6000610589565b11908115610fce575b50610fc2575050565b610fcb916110de565b50565b905038610fb9565b610fdf81610f6f565b6110097fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b916109ec565b9061101360405190565b600090a2565b1561102057565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b3d1561108e576110833d610c9d565b903d6000602084013e565b606090565b61109d6027610c9d565b7f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020820152660819985a5b195960ca1b604082015290565b6101d8611093565b600080916101d8936110ee606090565b506111006110fb8361114f565b611019565b602081019051915af4611111611074565b6111196110d6565b91611161565b906101a191611130610c38306109ec565b6101a19161113d82611493565b600191610dee565b906101a19161111f565b3b61115d610ece6000610589565b1190565b9091901561116d575090565b90611184565b60208082526101d892910190610466565b9061118d825190565b61119a610ece6000610589565b11156111a95750805190602001fd5b6108e8906111b660405190565b62461bcd60e51b815291829160048301611173565b6101d89060081c610d53565b6101d890546111cb565b610d536101d86101d89290565b156111f557565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b9060ff906109c5565b610d536101d86101d89260ff1690565b9061127a6101d8610a0c9261125a565b8254611251565b9061ff009060081b6109c5565b9061129e6101d8610a0c92151590565b8254611281565b6101e7906111e1565b6020810192916101a191906112a5565b6112cf6112cb60006111d7565b1590565b80806113ac575b8015611367575b6112e6906111ee565b611309600192826113006112f9866111e1565b600061126a565b611357576113ca565b6113105750565b61131b60008061128e565b6113527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161134960405190565b918291826112ae565b0390a1565b61136284600061128e565b6113ca565b5061137c6112cb611377306109ec565b61114f565b80156112dd57506112e66113906000610d59565b6113a461139d60016111e1565b9160ff1690565b1490506112dd565b506113b76000610d59565b6113c461139d60016111e1565b106112d6565b6113d59060d16109f5565b6101a1611463565b6101a1906112be565b156113ed57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b61145861145360006111d7565b6113e6565b6101a16101a1611482565b6101a1611446565b61147861145360006111d7565b6101a18033610a10565b6101a161146b565b506101a16108ec565b6101a19061148a565b906101a192916114aa6108ec565b6114fb565b156114b657565b60405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f72466163746f72793a20696e76616c6964206e616d650000006044820152606490fd5b6101a19291906115238261150f565b905090565b61151c610ece6020610589565b11156114af565b61157e565b909161030d9083908093610311565b90916101d892611528565b5190565b61155b611542611554835190565b9260200190565b9060208110611568575090565b61157a90600019906020036008021b90565b1690565b90916115c96115b86115c4610fcb956115a061159b61150a838991565b6111e1565b956115aa60405190565b938492602084019283611537565b908103825203826102b7565b611546565b60c9611f0c565b906101a1929161149c565b906101a192916115e96108ec565b6101a19291906115f88261150f565b90916116156115b86115c4610fcb956115a061159b61150a838991565b60cd611f0c565b906101a192916115db565b1561162e57565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72466163746f72793a206661696c656420746f2063616c6c2060448201527434b734ba34b0b634bd32903b37ba32903a37b5b2b760591b6064820152608490fd5b80151561018d565b905051906101a182611691565b90602082820312610186576101d891611699565b156116c157565b60405162461bcd60e51b815260206004820152602e60248201527f476f7665726e6f72466163746f72793a206661696c656420746f20696e69746960448201526d30b634bd329033b7bb32b93737b960911b6064820152608490fd5b1561172457565b60405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72466163746f72793a206661696c656420746f2063616c6c2060448201527234b734ba34b0b634bd329033b7bb32b93737b960691b6064820152608490fd5b356101d88161018b565b903590601e19368290030182121561018657018035906001600160401b0382116101865760200191602082023603831361018657565b356101d881610254565b506101d8906020810190610263565b8183526020909201916117f0565b9290565b906000825b828210611803575050505090565b9091929361183261182b60019261181a88866117cf565b6001600160a01b0316815260200190565b9560200190565b939201906117f5565b969593909461186a886060956118789561185d6101a19a600060808601950152565b8b830360208d01526117de565b9188830360408a01526117de565b9401906001600160a01b03169052565b6101d89081565b6101d89054611888565b6101d860606102dd565b6101a191906118c5906040906002906118cb818587516001600160a01b031690565b906109f5565b6118e6600182016118c560208801516001600160a01b031690565b019201516001600160a01b031690565b906101a1916118a3565b61060f6101a19461192f60609498979561191f608086019a6000870152565b6001600160a01b03166020850152565b6001600160a01b03166040830152565b634e487b7160e01b600052601160045260246000fd5b60001981146119645760010190565b61193f565b90600019906109c5565b906119836101d8610a0c92610589565b8254611969565b89959a97989396949190869161199e600090565b506119a891611eb3565b906119b291611c33565b948591829b6119c091611eee565b906119ca91611c33565b9586996119df60d1546001600160a01b031690565b906119e991611c33565b9487869a6119f660405190565b928391611a039183611537565b035a9260008094938194f1611a16611074565b90611a2090611627565b805160208201019060200190611a35916116a6565b611a3e906116ba565b604051928391611a4e9183611537565b035a9260008094938194f1611a61611074565b90611a6b9061171d565b805160208201019060200190611a80916116a6565b611a89906116ba565b611a92826109ec565b611a9b906109ec565b63c4c4c7b390611aaa83611785565b90611ab8602085018561178f565b93909460408101611ac9908261178f565b929091606001611ad8906117c5565b95843b1561018657600096611b03948894611b0e93611af660405190565b9b8c9a8b998a9860e01b90565b88526004880161183b565b03925af18015611be257611bc4575b50611ba5611b2b60d261188f565b91611b71611b37611899565b6001600160a01b03861681526001600160a01b03871660208201526001600160a01b0383166040820152611b6c8560d3610596565b6118f6565b7f4890248a3d058ddfcda4ef3861fca10627f6b078a3eb0cb70f0f4b0f65b759ea94611b9c60405190565b94859485611900565b0390a16101a1611bbd611bb860d261188f565b611955565b60d2611973565b611bdc906000611bd481836102b7565b8101906103b0565b38611b1d565b610d84565b15611bee57565b60405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606490fd5b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d730000008160601b60e81c1760005260781b17602052603760096000f5906101a1611c866101db6000610875565b6001600160a01b0384161415611be7565b6101d89291611ca591611eb3565b6101d891611cb2306109ec565b604391605593611cc0600090565b506040519260388401526f5af43d82803e903d91602b57fd5bf3ff60248401526014830152733d602d80600a3d3981f3363d3d373d3d3d363d73825260588201526037600c8201206078820152012090565b6101d89291611ca591611eee565b6101d890611ca560d1546001600160a01b031690565b6001600160401b0381116102d85760208091020190565b90610caa61032d83611d36565b60005b828110611d6957505050565b606082820152602001611d5d565b906101a1611d8d611d8784611d4d565b93611d36565b601f190160208401611d5a565b634e487b7160e01b600052603260045260246000fd5b90611db9825190565b811015611dca576020809102010190565b611d9a565b611dd960c9612202565b611de9611de4825190565b611d77565b90611df46000610589565b611dff6101d8835190565b811015611e375780611e17611542611e329385611db0565b611e218286611db0565b52611e2c8185611db0565b50611955565b611df4565b505090565b611e4660cd612202565b611e51611de4825190565b90611e5c6000610589565b611e676101d8835190565b811015611e375780611e17611542611e7f9385611db0565b611e5c565b6101d8929190611e938361150f565b6115c46101d893611eac936115b893506115aa60405190565b60c96120aa565b6101d891906000611e84565b6101d8929190611ece8361150f565b6115c46101d893611ee7936115b893506115aa60405190565b60cd6120aa565b6101d891906000611ebf565b6101d89081906001600160a01b031681565b90611f3b6117ec611f36611f3160006101d8989796611f29600090565b5001956109e3565b611efa565b610589565b611f54565b906105a0565b906119836101d8610a0c9290565b60009061030d6101d895611f81611f939596611f6e600090565b50611f7c8860028701611f40565b611f46565b611f8e8660038501611f40565b61126a565b90611faa60006101d893611fa5600090565b500190565b61202b565b8054821015611dca57611fc9600191600052602060002090565b91020190600090565b9160001960089290920291821b911b6109c5565b9190611ff56101d8610a0c9390565b908354611fd2565b90815491680100000000000000008310156102d857826120259160016101a195018155611faf565b90611fe6565b6120386112cb8383612071565b1561206a5761206591612060906001612059846120558482611ffd565b5490565b9301611f40565b611973565b600190565b5050600090565b61208f91600161208a92612083600090565b5001611f40565b61188f565b61209c610ece6000610589565b141590565b6101d890610589565b6120cf6120ca6101d8936120c560006120d495611fa5600090565b612125565b6120a1565b610868565b6109e3565b156120e057565b60405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606490fd5b6101d89061213961208a8460028401611f40565b926121446000610589565b841415918215612156575b50506120d9565b6121609250612167565b388061214f565b9061217960006101d893611fa5600090565b9061218b60006101d893611fa5600090565b612071565b60005b82811061219f57505050565b606082820152602001612193565b906101a16121bd611d8784611d4d565b601f190160208401612190565b6101d86101d86101d89260ff1690565b60ff1660ff81146119645760010190565b906121f4825190565b811015611dca570160200190565b9061220c8261237c565b9061221d612218835190565b6121ad565b60009161222983610589565b945b6122366101d8865190565b8610156123325761224a6115428787611db0565b9161227961225760405190565b809461226d60208301918261030d816020939052565b908103825203846102b7565b61228f6122896115428989611db0565b8361233b565b9561229c610cf3886121ca565b6122a68987611db0565b526122b18886611db0565b506122bb866111e1565b60ff881660ff8216101561231c57806122f06122e26122dc612317946121ca565b886121eb565b516001600160f81b03191690565b6123116122fd8c8a611db0565b51918a1a9161230b846121ca565b906121eb565b536121da565b6122bb565b5095509561232b919250611955565b949061222b565b50935091505090565b9061234d60006101d893611fa5600090565b61236491600361235f92612083600090565b610d59565b6101d861237160006111e1565b60ff831614156120d9565b6123946000806101d89361238e606090565b50010190565b60609061150a90612436565b906123c56123b96123af845490565b8084529260200190565b92600052602060002090565b9060005b8181106123d65750505090565b9091926123fa6123f36001926123eb8761188f565b815260200190565b9460010190565b9291016123c9565b906101d8916123a0565b906101a16124269261241d60405190565b93848092612402565b03836102b7565b6101d89061240c565b60006101d891612444606090565b500161242d56fea26469706673582212209be7e441d05bbb9ddf15a00cd884bec629f9c674b3aafb7c4cffae65906b671664736f6c63430008120033";

type GovernorFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorFactory__factory extends ContractFactory {
  constructor(...args: GovernorFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernorFactory> {
    return super.deploy(overrides || {}) as Promise<GovernorFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernorFactory {
    return super.attach(address) as GovernorFactory;
  }
  override connect(signer: Signer): GovernorFactory__factory {
    return super.connect(signer) as GovernorFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorFactoryInterface {
    return new utils.Interface(_abi) as GovernorFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorFactory {
    return new Contract(address, _abi, signerOrProvider) as GovernorFactory;
  }
}
