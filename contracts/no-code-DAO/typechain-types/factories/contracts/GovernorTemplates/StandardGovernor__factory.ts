/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StandardGovernor,
  StandardGovernorInterface,
} from "../../../contracts/GovernorTemplates/StandardGovernor";

const _abi = [
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "ProposalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTimelock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "TimelockChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "VoteCastWithParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "getVotesWithParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVotesUpgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract TimelockControllerUpgradeable",
        name: "timelock",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quorumNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialVotingDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialVotingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialProposalThreshold",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalEta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "queue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernorUpgradeable.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotesUpgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TimelockControllerUpgradeable",
        name: "newTimelock",
        type: "address",
      },
    ],
    name: "updateTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523461001a57604051614814610020823961481490f35b600080fdfe60806040526004361015610023575b361561001957600080fd5b61002161114e565b005b60003560e01c806301ffc9a7146102c357806302a251a3146102be57806303420181146102b957806306f3f9e6146102b457806306fdde03146102af578063150b7a02146102aa578063160cbed7146102a55780632656227d146102a05780632d63f6931461029b5780632fe3e261146102965780633932abb1146102915780633bab56701461028c5780633bccf4fd146102875780633e4f49e614610282578063438596321461027d578063544ffc9c1461027857806354fd4d5014610273578063567813881461026e5780635f398a141461026957806360c4247f1461026457806370b0f6601461025f5780637b3c71d31461025a5780637d5e81e21461025557806397c3d334146102505780639a802a6d1461024b578063a7713a7014610246578063a890c91014610241578063ab58fb8e1461023c578063b58131b014610237578063bc197c8114610232578063c01f9e371461022d578063c28bc2fa14610228578063c59057e414610223578063d33219b41461021e578063dd4e2ba514610219578063deaaa7cc14610214578063ea0217cf1461020f578063eb9019d41461020a578063ece40cc114610205578063f23a6e6114610200578063f8ce560a146101fb5763fc0c546a0361000e57611120565b61109a565b61107b565b611022565b611006565b610fcb565b610f92565b610f77565b610f42565b610f23565b610f0c565b610ece565b610eaf565b610e11565b610df6565b610dde565b610daf565b610d93565b610d37565b610d18565b610c92565b610c39565b610c1e565b610bff565b610b7f565b610b41565b610b17565b610ad9565b610a8f565b610a1f565b6109ae565b610916565b6108dd565b6108c2565b6108a8565b610889565b61067a565b6105dc565b610557565b61051e565b610346565b61030a565b6001600160e01b031981165b036102db57565b600080fd5b905035906102ed826102c8565b565b906020828203126102db57610303916102e0565b90565b9052565b346102db576103376103256103203660046102ef565b6146ff565b60405191829182901515815260200190565b0390f35b60009103126102db57565b346102db5761035636600461033b565b610337610361613daf565b6040519182918290815260200190565b806102d4565b905035906102ed82610371565b60ff81166102d4565b905035906102ed82610384565b909182601f830112156102db578135916001600160401b0383116102db5760200192600183028401116102db57565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761040057604052565b6103c9565b906102ed61041260405190565b92836103df565b6001600160401b03811161040057602090601f01601f19160190565b0190565b90826000939282370152565b9092919261045a61045582610419565b610405565b938185526020850190828401116102db576102ed92610439565b9080601f830112156102db5781602061030393359101610445565b91909160e0818403126102db576104a68382610377565b926104b4816020840161038d565b9260408301356001600160401b0381116102db57826104d491850161039a565b92909360608101356001600160401b0381116102db57826104f6918301610474565b92610303610507846080850161038d565b936105158160a08601610377565b9360c001610377565b346102db5761033761036161053436600461048f565b9695909594919493929361193d565b906020828203126102db5761030391610377565b346102db5761056f61056a366004610543565b612a4f565b604051005b60005b8381106105875750506000910152565b8181015183820152602001610577565b6105b86105c1602093610435936105ac815190565b80835293849260200190565b95869101610574565b601f01601f191690565b602080825261030392910190610597565b346102db576105ec36600461033b565b6103376105f7611273565b604051918291826105cb565b6001600160a01b031690565b6001600160a01b0381166102d4565b905035906102ed8261060f565b906080828203126102db57610640818361061e565b9261064e826020850161061e565b9261065c8360408301610377565b9260608201356001600160401b0381116102db576103039201610474565b346102db5761033761069961069036600461062b565b92919091611d64565b604051918291826001600160e01b0319909116815260200190565b6001600160401b0381116104005760208091020190565b909291926106db610455826106b4565b93818552602080860192028301928184116102db57915b8383106106ff5750505050565b6020809161070d848661061e565b8152019201916106f2565b9080601f830112156102db57816020610303933591016106cb565b90929192610743610455826106b4565b93818552602080860192028301928184116102db57915b8383106107675750505050565b602080916107758486610377565b81520192019161075a565b9080601f830112156102db5781602061030393359101610733565b9291906107aa610455826106b4565b93818552602080860192028101918383116102db5781905b8382106107d0575050505050565b81356001600160401b0381116102db576020916107f08784938701610474565b8152019101906107c2565b9080601f830112156102db578160206103039335910161079b565b6080818303126102db5780356001600160401b0381116102db578261083c918301610718565b9260208201356001600160401b0381116102db578361085c918401610780565b926040830135906001600160401b0382116102db57610880816103039386016107fb565b93606001610377565b346102db5761033761036161089f366004610816565b92919091612502565b6103376103616108b9366004610816565b929190916115bb565b346102db576103376103616108d8366004610543565b6114f1565b346102db576108ed36600461033b565b6103377fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88610361565b346102db5761092636600461033b565b610337610361613da1565b9060e0828203126102db57610946818361061e565b92610954826020850161061e565b926109628360408301610377565b926109708160608401610377565b9261097e8260808501610377565b9261098c8360a08301610377565b9260c08201356001600160401b0381116102db576109aa920161039a565b9091565b346102db576103376103256109c4366004610931565b969590959491949392936139b9565b919060a0838203126102db576109e98184610377565b926109f7826020830161038d565b92610303610a08846040850161038d565b93610a168160608601610377565b93608001610377565b346102db57610337610361610a353660046109d3565b93929092611895565b634e487b7160e01b600052602160045260246000fd5b60081115610a5e57565b610a3e565b906102ed82610a54565b61030390610a63565b61030690610a6d565b6020810192916102ed9190610a76565b346102db57610337610aaa610aa5366004610543565b613e6e565b60405191829182610a7f565b91906040838203126102db5761030390610ad08185610377565b9360200161061e565b346102db57610337610325610aef366004610ab6565b90611e16565b9081526060810193926102ed929091604091610b13905b6020830152565b0152565b346102db57610337610b32610b2d366004610543565b611e50565b60405191939193849384610af5565b346102db57610b5136600461033b565b6103376105f76112ae565b91906040838203126102db5761030390610b768185610377565b9360200161038d565b346102db57610337610361610b95366004610b5c565b90611822565b91906080838203126102db57610bb18184610377565b92610bbf826020830161038d565b9260408201356001600160401b0381116102db5783610bdf91840161039a565b92909360608201356001600160401b0381116102db576103039201610474565b346102db57610337610361610c15366004610b9b565b9392909261185a565b346102db57610337610361610c34366004610543565b61294a565b346102db5761056f610c4c366004610543565b6120dd565b916060838303126102db57610c668284610377565b92610c74836020830161038d565b9260408201356001600160401b0381116102db576109aa920161039a565b346102db57610337610361610ca8366004610c51565b92919091611841565b906080828203126102db5781356001600160401b0381116102db5781610cd8918401610718565b9260208301356001600160401b0381116102db5782610cf8918501610780565b9260408101356001600160401b0381116102db578361065c9183016107fb565b346102db57610337610361610d2e366004610cb1565b92919091614155565b346102db57610d4736600461033b565b6103376103616129de565b916060838303126102db57610d67828461061e565b92610d758360208301610377565b9260408201356001600160401b0381116102db576103039201610474565b346102db57610337610361610da9366004610d52565b91611817565b346102db57610dbf36600461033b565b610337610361612842565b906020828203126102db576103039161061e565b346102db5761056f610df1366004610dca565b612772565b346102db57610337610361610e0c366004610543565b612375565b346102db57610e2136600461033b565b610337610361614669565b91909160a0818403126102db57610e43838261061e565b92610e51816020840161061e565b9260408301356001600160401b0381116102db5782610e71918501610780565b9260608101356001600160401b0381116102db5783610e91918301610780565b9260808201356001600160401b0381116102db576103039201610474565b346102db57610337610699610ec5366004610e2c565b93929092611d99565b346102db57610337610361610ee4366004610543565b611520565b916060838303126102db57610efe828461061e565b92610c748360208301610377565b61056f610f1a366004610ee9565b92919091611d32565b346102db57610337610361610f39366004610816565b92919091611426565b346102db57610f5236600461033b565b610337610f5d61232d565b604051918291826001600160a01b03909116815260200190565b346102db57610f8736600461033b565b6103376105f7611def565b346102db57610fa236600461033b565b6103377f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f610361565b346102db5761056f610fde366004610543565b61214d565b91906040838203126102db5761030390610ffd818561061e565b93602001610377565b346102db5761033761036161101c366004610fe3565b906117eb565b346102db5761056f611035366004610543565b6121bd565b91909160a0818403126102db57611051838261061e565b9261105f816020840161061e565b9261106d8260408501610377565b92610e918360608301610377565b346102db5761033761069961109136600461103a565b93929092611d7e565b346102db576103376103616110b0366004610543565b613dbd565b610303916008021c6001600160a01b031690565b9061030391546110b5565b61030360006101936110c9565b61030390610603906001600160a01b031682565b610303906110e1565b610303906110f5565b610306906110fe565b6020810192916102ed9190611107565b346102db5761113036600461033b565b61033761113b6110d4565b60405191829182611110565b156102db57565b6102ed6111596146f7565b611175611168610603306110fe565b916001600160a01b031690565b14611147565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156111b1575b60208310146111ac57565b61117b565b91607f16916111a1565b805460009392916111d86111ce83611191565b8085529360200190565b916001811690811561122a57506001146111f157505050565b6112049192939450600052602060002090565b916000925b8184106112165750500190565b805484840152602090930192600101611209565b92949550505060ff1916825215156020020190565b90610303916111bb565b906102ed6112639261125a60405190565b9384809261123f565b03836103df565b61030390611249565b61030360fd61126a565b9061128a61045583610419565b918252565b611299600161127d565b603160f81b602082015290565b61030361128f565b6103036112a6565b906112d66112cf6112c5845190565b8084529260200190565b9260200190565b9060005b8181106112e75750505090565b90919261130d61130660019286516001600160a01b0316815260200190565b9460200190565b9291016112da565b906113246112cf6112c5845190565b9060005b8181106113355750505090565b90919261134b6113066001928651815260200190565b929101611328565b9061030391610597565b90611373611369835190565b8083529160200190565b90816113856020830284019460200190565b926000915b83831061139957505050505090565b909192939460206113bc6113b583856001950387528951611353565b9760200190565b930193019193929061138a565b9493916102ed936113fd61140b926113ef60609560808b01908b820360008d01526112b6565b9089820360208b0152611315565b90878203604089015261135d565b940152565b6103036103036103039290565b61030390611410565b906114589161144c6103039561143a600090565b506040519586946020860194856113c9565b908103825203826103df565b61146a611463825190565b9160200190565b2061141d565b9061147a90611410565b600052602052604060002090565b610303905b6001600160401b031690565b6103039054611488565b6103036020610405565b906102ed6114c560006114be6114a3565b9401611499565b6001600160401b03168352565b610303906114ad565b610303610303610303926001600160401b031690565b61151b611516600061151061030394611508600090565b5060fe611470565b016114d2565b61310c565b6114db565b61151b611516600161151061030394611508600090565b1561153e57565b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608490fd5b0390fd5b9060ff905b9181191691161790565b906115b06103036115b792151590565b8254611591565b9055565b926103039290916115ce83838388611426565b946115fd6115db87613e6e565b6115e56004610a63565b6115ee82610a63565b14908115611666575b50611537565b6116156001600261160f8960fe611470565b016115a0565b7f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f61163f60405190565b878152602090a1611653848484848a6116e1565b611660848484848a614677565b856117a5565b905061167b6116756005610a63565b91610a63565b14386115f7565b634e487b7160e01b600052601160045260246000fd5b60001981146116a75760010190565b611682565b634e487b7160e01b600052603260045260246000fd5b906116cb825190565b8110156116dc576020809102010190565b6116ac565b50939250506116ee6146f7565b6116f7306110fe565b9061170a6001600160a01b038316611168565b03611716575b50509050565b6117206000611410565b61172b610303865190565b811015611798578061175061174361176c93886116c2565b516001600160a01b031690565b6117626001600160a01b038516611168565b1461177157611698565b611720565b61179360ff61178083876116c2565b5161178c611463825190565b2090613633565b611698565b5050509050803880611710565b50505050506117b26146f7565b6117c1611168610603306110fe565b036117c857565b60ff6117da6117d682613765565b1590565b6117e2575b50565b6102ed90613745565b610303916117f761180f565b91612cd3565b610303600061127d565b6103036117fd565b610303611807565b610303929190612cd3565b61030391335b611830611807565b926119c7565b610303913691610445565b9161183061030394611851600090565b50335b92611836565b9161186b6103039594611851600090565b92611ac2565b9081526060810193926102ed92909160409161188c90610b0c565b019060ff169052565b92936103039461182892936118a8600090565b506118fc7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f6118eb6118d960405190565b809261144c8a8c602085019384611871565b6118f6611463825190565b20613381565b613129565b909594926102ed94611936610b139261192c60809661192560a088019c6000890152565b6020870152565b60ff166040850152565b6060830152565b94610303978597611854926118fc856118eb8b8961144c61186b9b9c9a9d611963600090565b506119966119908d7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af889591565b90611836565b6119a1611463825190565b20906119ae611463825190565b20906119b960405190565b968795602087019586611901565b9161030393916119d5600090565b506119de61180f565b93611ac2565b156119eb57565b60405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608490fd5b93611a6c6103039694611a65611a7995611a5b60a08a019660008b0152565b60ff166020890152565b6040870152565b8482036060860152610597565b916080818403910152610597565b9092611ab590611aae6103039694611aa460808601976000870152565b60ff166020850152565b6040830152565b6060818403910152610597565b909190611b0785611b0161151b6115166000611ae26103038860fe611470565b611510611aee89613e6e565b611afb6116756001610a63565b146119e4565b85612cd3565b94611b158187858786611f38565b8051611b28611b246000611410565b9190565b03611b755750611b6f611b5b7fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4946110fe565b9486611b6660405190565b94859485611a87565b0390a290565b611b6f90611ba37fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb8712956110fe565b9587611bae60405190565b95869586611a3c565b15611bbe57565b60405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a206f6e6c79476f7665726e616e636500000000000000006044820152606490fd5b929190611c1f335b611c196111686106036146f7565b14611bb7565b611c276146f7565b611c36611168610603306110fe565b03611c45575b6102ed93611cf9565b611c50600036611990565b611c5b611463825190565b205b611c6760ff6136e9565b819003611c5d5750611c3c565b90916104359083908093610439565b909161030392611c74565b3d15611ca857611c9d3d61127d565b903d6000602084013e565b606090565b611cb7602861127d565b7f476f7665726e6f723a2072656c617920726576657274656420776974686f7574602082015267206d65737361676560c01b604082015290565b610303611cad565b6117df93600093928493611d18611d0f60405190565b93849283611c83565b03925af1611d24611c8e565b611d2c611cf1565b91612d51565b906102ed939291611c03565b611d57611d516103039263ffffffff1690565b60e01b90565b6001600160e01b03191690565b50505050611d70600090565b5061030363150b7a02611d3e565b5050505050611d8b600090565b5061030363f23a6e61611d3e565b5050505050611da6600090565b5061030363bc197c81611d3e565b611dbe602061127d565b7f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e602082015290565b610303611db4565b610303611de7565b9061147a906110fe565b610303905b60ff1690565b6103039054611e01565b610303916003611e34611e3a93611e2b600090565b50610161611470565b01611df7565b611e0c565b6103039081565b6103039054611e3f565b610303611e5f91611e2b600090565b90611e6982611e46565b90611e826002611e7b60018601611e46565b9401611e46565b91929190565b15611e8f57565b60405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b6064820152608490fd5b60031115610a5e57565b906102ed82611ee4565b61030390611eee565b9190611f0c565b9290565b82018092116116a757565b9060001990611596565b90611f316103036115b792611410565b8254611f17565b611f4b9192945061030390610161611470565b90611f7d60038301611f6b611f666117d6611e3a8685611df7565b611e88565b611f786001938492611df7565b6115a0565b600093611f8c611e0686611ef8565b60ff821603611fb55750506102ed92611faf910191611faa83611e46565b611f01565b90611f21565b909350611fc4611e0685611ef8565b60ff821603611fe157506102ed92611faf910191611faa83611e46565b60029350611ffb611ff4611e0686611ef8565b9160ff1690565b03612013576102ed92611faf910191611faa83611e46565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608490fd5b61207f33611c0b565b6120876146f7565b612096611168610603306110fe565b036120a5575b6102ed906120d4565b6120b0600036611990565b6120bb611463825190565b205b6120c760ff6136e9565b8190036120bd575061209c565b6102ed906121d9565b6102ed90612076565b6120ef33611c0b565b6120f76146f7565b612106611168610603306110fe565b03612115575b6102ed90612144565b612120600036611990565b61212b611463825190565b205b61213760ff6136e9565b81900361212d575061210c565b6102ed90612287565b6102ed906120e6565b61215f33611c0b565b6121676146f7565b612176611168610603306110fe565b03612185575b6102ed906121b4565b612190600036611990565b61219b611463825190565b205b6121a760ff6136e9565b81900361219d575061217c565b6102ed906122e4565b6102ed90612156565b9081526040810192916102ed9160200152565b6102ed906121e861012f611e46565b817fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a939161222061221760405190565b928392836121c6565b0390a161012f611f21565b1561223257565b60405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608490fd5b6102ed9061229f6122986000611410565b821161222b565b6122aa610130611e46565b817f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828916122d961221760405190565b0390a1610130611f21565b6102ed906122f3610131611e46565b817fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc054619161232261221760405190565b0390a1610131611f21565b6103036123436101f8546001600160a01b031690565b6110fe565b905051906102ed82610371565b906020828203126102db5761030391612348565b6040513d6000823e3d90fd5b60206123db91612383600090565b5061239a6123436101f8546001600160a01b031690565b6123cd6123b66123b163d45c4435946101f9611470565b611e46565b926123c060405190565b9586948593849360e01b90565b835260048301526024820190565b03915afa9081156124385760009161240a575b506123f96001611410565b810361030357506103036000611410565b61242b915060203d8111612431575b61242381836103df565b810190612355565b386123ee565b503d612419565b612369565b61030690611410565b9061248c6102ed9597969461247e608095612470610b139560a088019088820360008a01526112b6565b908682036020880152611315565b90848203604086015261135d565b96606083019061243d565b90611f316103036115b79290565b91946124fb6124f060a0956124e26102ed996124d4610b13979d9c9a9d60c08a01908a820360008c01526112b6565b9088820360208a0152611315565b90868203604088015261135d565b98606085019061243d565b6080830152565b916125669161251385838387611426565b9461251d86613e6e565b9061253660049261253061167585610a63565b14611537565b602061254e6123436101f8546001600160a01b031690565b63f27a0c929061255d60405190565b97889260e01b90565b8252818086810103915afa948515612438576000956126eb575b506125976123436101f8546001600160a01b031690565b938660208463b1c5f427976125c56000996125ce888c898d6125b860405190565b9a8b998a98899860e01b90565b88528701612446565b03915afa8015612438576125f6916000916126cd575b506125f18a6101f9611470565b612497565b61260c6123436101f8546001600160a01b031690565b91638f2a0bb0833b156102db57612646888897938861263d96819661263060405190565b9e8f9b8c9a8b9960e01b90565b895288016124a5565b03925af192831561243857612662936126a0575b505042611f01565b61269a7f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28929161269060405190565b91829185836121c6565b0390a190565b816126bf92903d106126c6575b6126b781836103df565b81019061033b565b388061265a565b503d6126ad565b6126e5915060203d81116124315761242381836103df565b386125e4565b61270491955060203d81116124315761242381836103df565b9338612580565b61271433611c0b565b61271c6146f7565b61272b611168610603306110fe565b0361273a575b6102ed90612769565b612745600036611990565b612750611463825190565b205b61275c60ff6136e9565b8190036127525750612731565b6102ed906127cb565b6102ed9061270b565b6001600160a01b0390911681526040810192916102ed916020905b01906001600160a01b03169052565b906001600160a01b0390611596565b906127c46103036115b7926110fe565b82546127a5565b6102ed906127e56123436101f8546001600160a01b031690565b6127ee826110fe565b7f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b2264019161282561281c60405190565b9283928361277b565b0390a16101f86127b4565b6103039081906001600160e01b031681565b6101c78054612854611b246000611410565b0361286557506103036101c6611e46565b6128776128726103039290565b612eb7565b612830565b919082039182116116a757565b80548210156116dc576128a3600191600052602060002090565b91020190600090565b610303905b63ffffffff1690565b61030390546128ac565b6103039060201c5b6001600160e01b031690565b61030390546128c4565b6103036040610405565b906102ed61291e60006128fd6128e2565b9461291861290c8383016128ba565b63ffffffff1687840152565b016128d8565b6001600160e01b03166020840152565b610303906128ec565b6103036103036103039263ffffffff1690565b6101c78054600092919061295d84611410565b81146129cf5761299061298a61299d926129848786019161297e6001611410565b9061287c565b90612889565b5061292e565b9384015163ffffffff1690565b6129a78391612937565b11156129b7576103039250612dfa565b505060200151610303906001600160e01b0316612830565b505050506103036101c6611e46565b6103036064611410565b6129f133611c0b565b6129f96146f7565b612a08611168610603306110fe565b03612a17575b6102ed90612a46565b612a22600036611990565b612a2d611463825190565b205b612a3960ff6136e9565b819003612a2f5750612a0e565b6102ed90612be2565b6102ed906129e8565b15612a5f57565b60405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a490fd5b6128b16103036103039290565b634e487b7160e01b600052600060045260246000fd5b9063ffffffff90611596565b6128b16103036103039263ffffffff1690565b90612b286103036115b792612b05565b8254612af9565b9063ffffffff199060201b611596565b610303906128cc906001600160e01b031682565b90612b636103036115b792612b3f565b8254612b2f565b6102ed91612b9a90602090612b8c612b86825163ffffffff1690565b85612b18565b01516001600160e01b031690565b90612b53565b9190612baf576102ed91612b6a565b612ae3565b90815491680100000000000000008310156104005782612bdc9160016102ed95018155612889565b90612ba0565b612bf8612bf06103036129de565b821115612a58565b612c00612842565b906000612c0c81611410565b83141580612c9d575b612c5c575b50612c27816101c7612e77565b50507f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b463399791612c5761221760405190565b0390a1565b612c97906101c78101612c92612c7186613526565b61291e612c7c6128e2565b94612c8681612ad6565b63ffffffff1690860152565b612bb4565b38612c1a565b506101c7810154612cb0611b2483611410565b14612c15565b6001600160a01b0390911681526040810192916102ed9160200152565b6020919250612ce0600090565b50612cf7612343610193546001600160a01b031690565b612d18633a46b1a8612d23612d0b60405190565b9687958694859460e01b90565b845260048401612cb6565b03915afa90811561243857600091612d39575090565b610303915060203d81116124315761242381836103df565b90919015612d5d575090565b8151612d6c611b246000611410565b1115612d7b5750805190602001fd5b61158d90612d8860405190565b62461bcd60e51b8152918291600483016105cb565b15612da457565b60405162461bcd60e51b81528061158d600482016020808252818101527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564604082015260600190565b6128cc6103036103039290565b612e1a61030392612e09600090565b50612e15438210612d9d565b6135a0565b8154829190612e3790600094612e2f86611410565b938491613088565b90816000939103612e4e5750505061287790612ded565b612877935090612e6b611b248461291894019261297e6001611410565b60005260206000200190565b612eaa612eb19392600061030393612e8d600090565b500190612ea5611f08612e9f436135a0565b92613526565b612f45565b9390612830565b92612830565b805490600091612ec683611410565b816000939103612edc5750505061030390612ded565b610303935090612e6b611b248461291894019261297e6001611410565b15612f0057565b60405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b65790000000000000000006044820152606490fd5b91929190815490846000612f5881611410565b84111561304b57906020939291611b2495600194612f96612f91612f84612f7e89611410565b8461287c565b8460005260206000200190565b61292e565b95612fd4848801612fca612fae825163ffffffff1690565b612fc363ffffffff8b165b9163ffffffff1690565b1115612ef9565b5163ffffffff1690565b612fe363ffffffff8816612fb9565b0361301157612b8c955061300b929161297e612ffe92611410565b9060005260206000200190565b01612b53565b5050909150613033613046936130256128e2565b9384019063ffffffff169052565b6001600160e01b03881682860152612bb4565b612b8c565b92505061308390611b249361306f6130616128e2565b63ffffffff90931685840152565b6001600160e01b0387166020830152612bb4565b612ded565b93919092613094600090565b505b80821015613104576130a881836134a5565b90816130c660006130c0838a60005260206000200190565b016128ba565b6130d563ffffffff8816612fb9565b11156130e5575050915b91613096565b909392506130fe91506130f86001611410565b90611f01565b906130df565b925050915090565b60006103039161311a600090565b5001516001600160401b031690565b9161030393916131419361313b600090565b506132d1565b91909161315d565b60051115610a5e57565b906102ed82613149565b6131676000613153565b61317082613153565b036131785750565b6131826001613153565b61318b82613153565b036131d55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b6131df6002613153565b6131e882613153565b036132325760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b61324561323f6003613153565b91613153565b1461324c57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b6106036103036103039290565b6103039061329c565b610b136102ed94611aae606094989795611aa4608086019a6000870152565b9192916132dd8361141d565b613309611b247f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0611410565b1161336d5761332960009360209561332060405190565b948594856132b2565b838052039060015afa156124385760005190600091613347836132a9565b6001600160a01b0381166001600160a01b0383161461336557509190565b925050600190565b5050505061337b60006132a9565b90600390565b6103039061338d6133dd565b6133b5565b60208093926133af61128a6104359461190160f01b815260020190565b01918252565b61144c916133ce91604051938492602084019283613392565b6133d9611463825190565b2090565b6103037f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61340961346c565b613411613476565b91613442565b909594926102ed946119366127969261343b60809661192560a088019c6000890152565b6040850152565b6133ce919061144c46613454306110fe565b9061345e60405190565b968795602087019586613417565b6103036065611e46565b6103036066611e46565b634e487b7160e01b600052601260045260246000fd5b81156134a0570490565b613480565b6130f8610303926134b4600090565b5080831692186134c46002611410565b90613496565b156134d157565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b6103039061308361353d6001600160e01b03612830565b8211156134ca565b1561354c57565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b610303906135bc6135b463ffffffff612937565b821115613545565b612ad6565b6103039060801c5b600f0b90565b61030390546135c1565b6135c961030361030392600f0b90565b9061147a906135d9565b6135c96103036103039290565b906fffffffffffffffffffffffffffffffff199060801b611596565b9061362c6103036115b7926135d9565b8254613600565b61366a60016136596102ed946125f16000860195613650876135cf565b948591016135e9565b61366360016135f3565b01600f0b90565b9061361c565b610303906135c9565b6103039054613670565b9160001960089290920291821b911b611596565b91906136a66103036115b79390565b908354613683565b6102ed91600091613697565b906fffffffffffffffffffffffffffffffff90611596565b906136e26103036115b7926135d9565b82546136ba565b906136f382613765565b613733576102ed8261372d600161370983613679565b9501946136596000613728836137226123b1828c6135e9565b996135e9565b6136ae565b906136d2565b604051631ed9509560e11b8152600490fd5b6102ed906000613754816135f3565b910161376082826136d2565b61361c565b61378461377d6135c9613777846135cf565b93613679565b91600f0b90565b131590565b6103039060081c611e06565b6103039054613789565b611e066103036103039290565b156137b357565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b611e066103036103039260ff1690565b906115b06103036115b79261380f565b9061ff009060081b611596565b9061384c6103036115b792151590565b825461382f565b6103069061379f565b6020810192916102ed9190613853565b96939098979491926138be96936138866117d66000613795565b9a8b80613956575b8015613918575b61389e906137ac565b6001998c6138b56138ae8d61379f565b600061381f565b61390857613974565b926138c65750565b6138d160008061383c565b612c577f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498916138ff60405190565b9182918261385c565b6139138b600061383c565b613974565b5061392d6117d6613928306110fe565b613d37565b8015613895575061389e6139416000611e0c565b61394e611ff4600161379f565b149050613895565b506139616000611e0c565b61396e611ff4600161379f565b1061388e565b6139a2926139986139936139b49b6139a798999a9b61399d9550611836565b613a5b565b613c84565b613d08565b613cc6565b6139af613c00565b613c26565b600190565b6103039796959493929190600061386c565b156139d257565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6102ed90613a41613a3c6000613795565b6139cb565b6102ed90613a56613a506112ae565b82613d97565b613bea565b6102ed90613a2b565b6102ed90613a75613a3c6000613795565b613bdf565b91906136a66103036115b793611410565b6102ed91600091613a7a565b818110613aa2575050565b80613ab06000600193613a8b565b01613a97565b9190601f8111613ac557505050565b613ad76102ed93600052602060002090565b906020601f840181900483019310613af9575b6020601f909101040190613a97565b9091508190613aea565b90613b0c815190565b906001600160401b03821161040057613b2f82613b298554611191565b85613ab6565b602090601f8311600114613b6a576115b7929160009183613b5f575b5050600019600883021c1916906002021790565b015190503880613b4b565b601f19831691613b7f85600052602060002090565b9260005b818110613bbd57509160029391856001969410613ba4575b50505002019055565b01516000196008601f8516021c19169055388080613b9b565b91936020600181928787015181550195019201613b83565b906102ed91613b03565b6102ed9060fd613bd5565b6102ed90613a64565b6102ed613a3c6000613795565b6102ed613bf3565b906102ed9291613c1b613a3c6000613795565b906102ed9291613c5f565b906102ed9291613c08565b906102ed9291613c44613a3c6000613795565b6102ed9291613c55613c5a926121d9565b612287565b6122e4565b906102ed9291613c31565b6102ed90613c7b613a3c6000613795565b6102ed90613ca3565b6102ed90613c6a565b6102ed90613c9e613a3c6000613795565b612769565b6102ed90613c8d565b6102ed90613cbd613a3c6000613795565b6102ed90613ce5565b6102ed90613cac565b6102ed90613ce0613a3c6000613795565b612a46565b6102ed90613ccf565b6102ed90613cff613a3c6000613795565b6102ed90613d2e565b6102ed90613cee565b6102ed90613d22613a3c6000613795565b6102ed906101936127b4565b6102ed90613d11565b3b613d45611b246000611410565b1190565b906102ed91613d5b613a3c6000613795565b90613d90613d7c613d6c6102ed9490565b613d77611463825190565b209290565b613d87611463825190565b20916065612497565b6066612497565b906102ed91613d49565b61030361030361012f611e46565b610303610303610130611e46565b61030390613dd9565b818102929181159184041417156116a757565b613e0c6020613df4612343610193546001600160a01b031690565b638e539e8c90613e0360405190565b93849260e01b90565b82526004820185905260249082905afa80156124385761030392613e4292600092613e4a575b50613e3c9061294a565b90613dc6565b6134c46129de565b613e3c919250613e679060203d81116124315761242381836103df565b9190613e32565b61030390613ea0565b8015156102d4565b905051906102ed82613e77565b906020828203126102db5761030391613e7f565b613ea981613ffb565b90600490613eb682610a63565b613ebf84610a63565b03613ff6576123b1613ed3916101f9611470565b90613ee16103036000611410565b8203613eec57505090565b909150613f196020613f0a6123436101f8546001600160a01b031690565b632ab0f52990613e0360405190565b82528180613f2d8888830190815260200190565b03915afa90811561243857600091613fd8575b5015613f4d575050600790565b602090613f666123436101f8546001600160a01b031690565b613f7a63584b153e613f87612d0b60405190565b8452830190815260200190565b03915afa90811561243857600091613faa575b5015613fa557600590565b600290565b613fcb915060203d8111613fd1575b613fc381836103df565b810190613e8c565b38613f9a565b503d613fb9565b613ff0915060203d8111613fd157613fc381836103df565b38613f40565b505090565b600261400b6103038360fe611470565b0161401581611e0c565b6140e65761402290613795565b6140e05761402f816114f1565b600061403a81611410565b821461409b5743918211156140955750614059611b24611f0884611520565b101561408f57614068816140ed565b908161407f575b501561407a57600490565b600390565b614089915061412f565b3861406f565b50600190565b91505090565b60405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606490fd5b50600290565b5050600790565b61412a611b246103036141116110b061410b61030387610161611470565b956114f1565b936130f8600261412360018401611e46565b9201611e46565b111590565b61030361413e91611e2b600090565b613d45611b246103036000611e7b60018601611e46565b6103039392919061442c565b1561416857565b60405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608490fd5b156141ce57565b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b6064820152608490fd5b1561422457565b60405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606490fd5b1561427057565b60405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608490fd5b6142da906001600160401b03165b916001600160401b031690565b01906001600160401b0382116116a757565b9061128a610455836106b4565b60005b82811061430857505050565b6060828201526020016142fc565b906102ed61432c614326846142ec565b936106b4565b601f1901602084016142f9565b90614345611369835190565b90816143576020830284019460200190565b926000915b83831061436b57505050505090565b909192939460206143876113b583856001950387528951611353565b930193019193929061435c565b610306906114db565b959061441e956143ed6103039b999a966143df6143fb94614414986143d26144099960208f6127966101208201966000830152565b8c820360408e01526112b6565b908a820360608c0152611315565b9088820360808a0152614339565b9086820360a088015261135d565b9560c0850190614394565b60e0830190614394565b610100818403910152610597565b334394600161443a81611410565b614444908861287c565b61444e90846117eb565b614456614669565b111561446190614161565b8151602083012061447490878787611426565b9661447d855190565b865114614489906141c7565b8451875114614497906141c7565b8451906000916144a683611410565b106144b09061421d565b6144bb8960fe611470565b918201906144c8826114d2565b6144d1906145cb565b6144da90614269565b6144e390614645565b6144eb613da1565b6144f490614645565b6144fd916142bf565b928392614508613daf565b61451190614645565b61451b90856142bf565b94859390614528916145b4565b0190614533916145b4565b845161453e90614316565b967f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e09761456a60405190565b97889761269a978c8a61439d565b906001600160401b0390611596565b61148d610303610303926001600160401b031690565b906145ad6103036115b792614587565b8254614578565b6102ed919061459d565b61148d6103036103039290565b60006145d99161311a600090565b6145e66142cd60006145be565b1490565b156145f157565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608490fd5b6103039061466461465c6001600160401b036114db565b8211156145ea565b6145be565b610303610303610131611e46565b506102ed9392906146946123436101f8546001600160a01b031690565b6000943463e38335e5833b156102db576146cf6146c4938980986146b760405190565b9a8b998a98899760e01b90565b875260048701612446565b03925af18015612438576146e1575050565b816102ed92903d106126c6576126b781836103df565b61030361232d565b61030390636e665ced60e01b6001600160e01b0319821614908115614722575090565b61030391506379dd796f60e01b9061476b614740635f398a14611d3e565b831861474f6303420181611d3e565b1861475d639a802a6d611d3e565b186001600160e01b03191690565b6001600160e01b03198216149182156147c7575b5081156147ac575b8115614791575090565b61030391506001600160e01b0319166301ffc9a760e01b1490565b6001600160e01b03198116630271189760e51b149150614787565b6001600160e01b031980831691161491503861477f56fea26469706673582212203e6a06a4d52210c9364869c05c0183e5e07ba5a730a3aebbaad0b1f4c655775c64736f6c63430008120033";

type StandardGovernorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StandardGovernorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StandardGovernor__factory extends ContractFactory {
  constructor(...args: StandardGovernorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StandardGovernor> {
    return super.deploy(overrides || {}) as Promise<StandardGovernor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StandardGovernor {
    return super.attach(address) as StandardGovernor;
  }
  override connect(signer: Signer): StandardGovernor__factory {
    return super.connect(signer) as StandardGovernor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardGovernorInterface {
    return new utils.Interface(_abi) as StandardGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StandardGovernor {
    return new Contract(address, _abi, signerOrProvider) as StandardGovernor;
  }
}
