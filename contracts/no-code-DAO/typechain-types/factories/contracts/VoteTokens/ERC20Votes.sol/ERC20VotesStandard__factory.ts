/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20VotesStandard,
  ERC20VotesStandardInterface,
} from "../../../../contracts/VoteTokens/ERC20Votes.sol/ERC20VotesStandard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461001a57604051612cc86100208239612cc890f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101c2578063095ea7b3146101bd57806318160ddd146101b857806323b872dd146101b3578063313ce567146101ae5780633644e515146101a957806339509351146101a45780633a46b1a81461019f57806340c10f191461019a5780634cd88b7614610195578063587cde1e146101905780635c19a95c1461018b5780636fcfff451461018657806370a0823114610181578063715018a61461017c5780637ecebe00146101775780638da5cb5b146101725780638e539e8c1461016d57806395d89b41146101685780639ab24eb014610163578063a457c2d71461015e578063a9059cbb14610159578063c3cda52014610154578063d505accf1461014f578063dd62ed3e1461014a578063f1127ed8146101455763f2fde38b036101d25761083e565b610816565b610795565b610753565b6106ce565b610642565b610626565b61060b565b6105f0565b6105d5565b61059c565b610581565b610569565b61054e565b61051c565b610504565b6104cf565b61049c565b610400565b6103e4565b6103c8565b6103ad565b61037e565b610362565b610306565b6102d8565b610246565b60009103126101d257565b600080fd5b60005b8381106101ea5750506000910152565b81810151838201526020016101da565b61021b61022460209361022e9361020f815190565b80835293849260200190565b958691016101d7565b601f01601f191690565b0190565b6020808252610243929101906101fa565b90565b346101d2576102563660046101c7565b61026d610261610ba0565b60405191829182610232565b0390f35b6001600160a01b031690565b6001600160a01b0381165b036101d257565b9050359061029c8261027d565b565b80610288565b9050359061029c8261029e565b91906040838203126101d257610243906102cb818561028f565b936020016102a4565b9052565b346101d25761026d6102f46102ee3660046102b1565b90610c55565b60405191829182901515815260200190565b346101d2576103163660046101c7565b61026d610321610be2565b6040515b9182918290815260200190565b90916060828403126101d25761024361034b848461028f565b93610359816020860161028f565b936040016102a4565b346101d25761026d6102f4610378366004610332565b91610c65565b346101d25761038e3660046101c7565b61026d610399610bc7565b6040519182918260ff909116815260200190565b346101d2576103bd3660046101c7565b61026d610321611c3e565b346101d25761026d6102f46103de3660046102b1565b90610c9e565b346101d25761026d6103216103fa3660046102b1565b9061135b565b346101d2576104196104133660046102b1565b90612b03565b604051005b909182601f830112156101d25781359167ffffffffffffffff83116101d25760200192600183028401116101d257565b90916040828403126101d257813567ffffffffffffffff81116101d2578361047791840161041e565b929093602082013567ffffffffffffffff81116101d257610498920161041e565b9091565b346101d25761026d6102f46104b236600461044e565b92919091612749565b906020828203126101d2576102439161028f565b346101d25761026d6104ea6104e53660046104bb565b611250565b604051918291826001600160a01b03909116815260200190565b346101d2576104196105173660046104bb565b6114e0565b346101d25761026d6105376105323660046104bb565b611235565b6040519182918263ffffffff909116815260200190565b346101d25761026d6103216105643660046104bb565b610c04565b346101d2576105793660046101c7565b61041961088e565b346101d25761026d6103216105973660046104bb565b611c1f565b346101d2576105ac3660046101c7565b61026d6104ea60fe546001600160a01b031690565b906020828203126101d257610243916102a4565b346101d25761026d6103216105eb3660046105c1565b611387565b346101d2576106003660046101c7565b61026d610261610baa565b346101d25761026d6103216106213660046104bb565b6112a0565b346101d25761026d6102f461063c3660046102b1565b90610d17565b346101d25761026d6102f46106583660046102b1565b90610c20565b60ff8116610288565b9050359061029c8261065e565b909160c0828403126101d25761068a838361028f565b9261069881602085016102a4565b926106a682604083016102a4565b926102436106b78460608501610667565b936106c581608086016102a4565b9360a0016102a4565b346101d2576104196106e1366004610674565b949390939291926115c1565b60e0818303126101d257610701828261028f565b9261070f836020840161028f565b9261071d81604085016102a4565b9261072b82606083016102a4565b9261024361073c8460808501610667565b9361074a8160a086016102a4565b9360c0016102a4565b346101d2576104196107663660046106ed565b95949094939193611b93565b91906040838203126101d2576102439061078c818561028f565b9360200161028f565b346101d25761026d6103216107ab366004610772565b90610c35565b63ffffffff8116610288565b9050359061029c826107b1565b91906040838203126101d257610243906107e4818561028f565b936020016107bd565b60408101929161029c9190805163ffffffff1682526020908101516001600160e01b0316910152565b346101d25761026d61083261082c3660046107ca565b9061120f565b604051918291826107ed565b346101d2576104196108513660046104bb565b6109af565b61085e6108ea565b61029c61087c565b6102716102436102439290565b61024390610866565b61029c6108896000610873565b610a0e565b61029c610856565b1561089d57565b60405162461bcd60e51b8152806108e6600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b61029c6108ff60fe546001600160a01b031690565b61091861090b33610271565b916001600160a01b031690565b14610896565b61029c9061092a6108ea565b61098a565b1561093657565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61029c9061088961099e6102716000610873565b6001600160a01b038316141561092f565b61029c9061091e565b906001600160a01b03905b9181191691161790565b61024390610271906001600160a01b031682565b610243906109cd565b610243906109e1565b90610a03610243610a0a926109ea565b82546109b8565b9055565b60fe546001600160a01b031690610a268160fe6109f3565b610a59610a537f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936109ea565b916109ea565b91610a6360405190565b80805b0390a3565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610aa1575b6020831014610a9c57565b610a6b565b91607f1691610a91565b80546000939291610ac8610abe83610a81565b8085529360200190565b9160018116908115610b1a5750600114610ae157505050565b610af49192939450600052602060002090565b916000925b818410610b065750500190565b805484840152602090930192600101610af9565b92949550505060ff1916825215156020020190565b9061024391610aab565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610b7157604052565b610b39565b9061029c610b9092610b8760405190565b93848092610b2f565b0383610b4f565b61024390610b76565b6102436036610b97565b6102436037610b97565b610bc16102436102439290565b60ff1690565b6102436012610bb4565b6102439081565b6102439054610bd1565b6102436035610bd8565b90610bf6906109ea565b600052602052604060002090565b610c1b61024391610c13600090565b506033610bec565b610bd8565b610c30919033610e76565b610e76565b600190565b61024391610c50610c1b92610c48600090565b506034610bec565b610bec565b610c30919033610ffe565b610ffe565b610c30929190610c2b8333836110dc565b634e487b7160e01b600052601160045260246000fd5b91908201809211610c9957565b610c76565b610c309190610cb73392610cb28385610c35565b610c8c565b91610ffe565b15610cc457565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b610c309190610cb73392610d2b8385610c35565b610d3782821015610cbd565b0390565b15610d4257565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15610d9c57565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15610df457565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b90600019906109c3565b6102436102436102439290565b90610e6f610243610a0a92610e52565b8254610e48565b9061029c9291610ebb610eaa610e8c6000610873565b6102716001600160a01b0382166001600160a01b0386161415610d3b565b6001600160a01b0384161415610d95565b610f06610ef3836033610c50610ee488610ed8610c1b8986610bec565b610d3782821015610ded565b610eee8784610bec565b610e5f565b610f008561022e83610bd8565b90610e5f565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610f30826109ea565b610f39846109ea565b91610f4360405190565b868152602090a3612ac9565b15610f5657565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b15610fae57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b61103d61102c61100e6000610873565b6102716001600160a01b0382166001600160a01b0386161415610f4f565b6001600160a01b0384161415610fa7565b61105083610eee84610c50856034610bec565b610a666110866110807f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925936109ea565b936109ea565b9361032560405190565b1561109757565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b906110e78183610c35565b60001981036110f7575b50505050565b61110b93610cb791610d3782821015611090565b388080806110f1565b9061029c61112160405190565b9283610b4f565b6102436040611114565b61113a611128565b906000825260006020830152565b610243611132565b634e487b7160e01b600052603260045260246000fd5b805482101561118957611180600191600052602060002090565b91020190600090565b611150565b610243905b63ffffffff1690565b610243905461118e565b6102439060201c5b6001600160e01b031690565b61024390546111a6565b9061029c6111f660006111d5611128565b946111f06111e483830161119c565b63ffffffff1687840152565b016111ba565b6001600160e01b03166020840152565b610243906111c4565b6102439161122a61122f92611222611148565b5060cd610bec565b611166565b50611206565b61124b61124761024392611222600090565b5490565b612478565b6112676102439161125f600090565b5060cc610bec565b546001600160a01b031690565b91908203918211610c9957565b6111ae6102436102439290565b6102439081906001600160e01b031681565b6102439060cd6112b36112478383610bec565b6000926112bf84610e52565b8260009491036112db57505050506112d690611281565b61128e565b6112d694506112f1611308939261130292610bec565b916112fc6001610e52565b90611274565b90611166565b50016111ba565b1561131657565b60405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606490fd5b906113826102436102439361136e600090565b5061137b43855b1061130f565b60cd610bec565b6113af565b610243906113954382611375565b60ce6113af565b6102436102436102439263ffffffff1690565b919082546000926113bf84610e52565b90826113cb6005610e52565b811161148b575b50915b8082101561143e576113e78183612063565b9081611404876113fe838b60005260206000200190565b0161119c565b61140f875b9161139c565b111561141f575050915b916113d5565b9093925061143891506114326001610e52565b90610c8c565b90611419565b9194905061024393925061145183610e52565b826000939103611467575050506112d690611281565b6112d693509061147e6111f0926112fc6001610e52565b9060005260206000200190565b806112fc61149b929593956120b7565b906114b1866113fe848a60005260206000200190565b6114ba86611409565b11156114c95750915b386113d2565b9291506114da906114326001610e52565b906114c3565b61029c903361166c565b61166c565b156114f657565b60405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606490fd5b61157161029c9461156a60609498979561155a608086019a6000870152565b6001600160a01b03166020850152565b6040830152565b0152565b1561157c57565b60405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606490fd5b939461029c95829461165161165694611639896114ea986115f1426115ea6115e68490565b9190565b11156114ef565b61162d7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf9161161f60405190565b95869460208601948561153b565b90810382520382610b4f565b61164b611644825190565b9160200190565b20611fd8565b611c9c565b916116666115e661024385611c46565b14611575565b61029c9161167982611250565b61168283610c04565b92611697836116928360cc610bec565b6109f3565b6116c17f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f916109ea565b6116ca836109ea565b906116d4856109ea565b926116de60405190565b600090a46116fa565b90815260408101929161029c9160200152565b9091906001600160a01b0383166001600160a01b038216141580611833575b61172257505050565b611758906117306000610873565b906001600160a01b0382166001600160a01b038216036117d5575b506001600160a01b031690565b6001600160a01b0383160361176c575b5050565b61178d9061177b8360cd610bec565b6117876115e660029290565b90611951565b6117ba7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724939293926109ea565b926117d06117c760405190565b928392836116e7565b0390a2565b6117f0846117e48360cd610bec565b6117876115e660019290565b61181d7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724939293926109ea565b9261182a6117c760405190565b0390a23861174b565b5061183e6000610e52565b8211611719565b6111936102436102439290565b634e487b7160e01b600052600060045260246000fd5b9063ffffffff906109c3565b6111936102436102439263ffffffff1690565b90611897610243610a0a92611874565b8254611868565b9063ffffffff199060201b6109c3565b610243906111ae906001600160e01b031682565b906118d2610243610a0a926118ae565b825461189e565b61029c91611909906020906118fb6118f5825163ffffffff1690565b85611887565b01516001600160e01b031690565b906118c2565b919061191e5761029c916118d9565b611852565b9081549168010000000000000000831015610b71578261194b91600161029c95018155611166565b9061190f565b9092908054600061196181610e52565b8203611a5d576119c6611972611128565b61198a61197e84611845565b63ffffffff1682850152565b6119a661199684611281565b6001600160e01b03166020830152565b955b6119bf6112d660208901516001600160e01b031690565b8098612c6d565b928395826119d381610e52565b85119182611a42575b505015611a0757611a019061147e6119f661029c966123f9565b946112fc6001610e52565b016118c2565b909150611a3d61029c936111f6611a26611a2043612478565b926123f9565b91611a2f611128565b9586019063ffffffff169052565b611923565b015163ffffffff169050611a5543611409565b1482386119dc565b6119c6611a8b611a86611a79611a736001610e52565b86611274565b8660005260206000200190565b611206565b956119a8565b6102439190610c8c565b6102439190611274565b15611aac57565b60405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b9194611b4061157192989795611b3960a096611b2961029c9a611b1960c08a019e60008b0152565b6001600160a01b03166020890152565b6001600160a01b03166040870152565b6060850152565b6080830152565b15611b4e57565b60405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606490fd5b929582958295611651611c079461163988610c609861162d61029c9e611bc442611bbd6115e68490565b1115611aa5565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c992611bef85611c46565b90611bf960405190565b978896602088019687611af1565b611c196001600160a01b03841661090b565b14611b47565b611c3961024361024392611c31600090565b506099610bec565b611c68565b610243611f1d565b610243611c5591611c31600090565b9061029c611c6283611c68565b92611c7d565b600061024391611c76600090565b5001610bd8565b61029c90610f006000611c906001610e52565b92019161022e83610bd8565b916102439391611cb493611cae600090565b50611e68565b919091611ceb565b634e487b7160e01b600052602160045260246000fd5b60051115611cdc57565b611cbc565b9061029c82611cd2565b611cf56000611ce1565b611cfe82611ce1565b03611d065750565b611d106001611ce1565b611d1982611ce1565b03611d635760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611d6d6002611ce1565b611d7682611ce1565b03611dc05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b611dd3611dcd6003611ce1565b91611ce1565b14611dda57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b61024390610e52565b61157161029c9461156a606094989795611e52608086019a6000870152565b60ff166020850152565b6040513d6000823e3d90fd5b919291611e7483611e2a565b611ea06115e67f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0610e52565b11611f0957611ec0600093602095611eb760405190565b94859485611e33565b838052039060015afa15611f045760005190600091611ede83610873565b6001600160a01b0381166001600160a01b03831614611efc57509190565b925050600190565b611e5c565b50505050611f176000610873565b90600390565b6102437f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611f4961202a565b611f51612034565b91611f9f565b9095949261029c94611f89611f9092611f82608096611f7b60a088019c6000890152565b6020870152565b6040850152565b6060830152565b01906001600160a01b03169052565b611fc9919061162d46611fb1306109ea565b90611fbb60405190565b968795602087019586611f57565b611fd4611644825190565b2090565b61024390611fe4611f1d565b612011565b602080939261200b61200661022e9461190160f01b815260020190565b918252565b01918252565b61162d91611fc991604051938492602084019283611fe9565b6102436065610bd8565b6102436066610bd8565b634e487b7160e01b600052601260045260246000fd5b811561205e570490565b61203e565b61143261024392612072600090565b5080831692186120826002610e52565b90612054565b6102439061209c6115e66102439460ff1690565b901c90565b610243906120b26115e66102439490565b901b90565b60006120c281610e52565b82146121a9575060016120d4826121c5565b6120dd82610bb4565b8080808080966120ee828098612088565b906120f890610e52565b90612102916120a1565b61210c818a612054565b019061211791612088565b6121218189612054565b019061212c91612088565b6121368188612054565b019061214191612088565b61214b8187612054565b019061215691612088565b6121608186612054565b019061216b91612088565b6121758185612054565b019061218091612088565b61218a8184612054565b019061219591612088565b90816121a091612054565b610243916121b3565b6102439150610e52565b90808210156121c0575090565b905090565b6000906121d182610e52565b9160806121e66121e082610bb4565b84612088565b848111612383575b505060406121fe6121e082610bb4565b61220783610e52565b8111612369575b5050602061221e6121e082610bb4565b61222783610e52565b811161234f575b5050601061223e6121e082610bb4565b61224783610e52565b8111612335575b5050600861225e6121e082610bb4565b61226783610e52565b811161231b575b5050600461227e6121e082610bb4565b61228783610e52565b8111612301575b5050600261229e6121e082610bb4565b6122a783610e52565b81116122e7575b50506122d16115e66122cb6001946122c586610bb4565b90612088565b92610e52565b116122da575090565b9061022e61024392610e52565b6122f9929491935061022e9093610e52565b9138806122ae565b612313929491935061022e9093610e52565b91388061228e565b61232d929491935061022e9093610e52565b91388061226e565b612347929491935061022e9093610e52565b91388061224e565b612361929491935061022e9093610e52565b91388061222e565b61237b929491935061022e9093610e52565b91388061220e565b612395929491935061022e9093610e52565b9138806121ee565b156123a457565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b610243906124186124106001600160e01b0361128e565b82111561239d565b611281565b1561242457565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b6102439061249461248c63ffffffff61139c565b82111561241d565b611845565b6102439060081c610bc1565b6102439054612499565b61024390610bc1565b61024390546124af565b156124c957565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b9060ff906109c3565b610bc16102436102439260ff1690565b9061254e610243610a0a9261252e565b8254612525565b9061ff009060081b6109c3565b90612572610243610a0a92151590565b8254612555565b6102d490610bb4565b60208101929161029c9190612579565b926125e492959491956125ac6125a860006124a5565b1590565b968780612688575b8015612643575b6125c4906124c2565b600195886125db6125d489610bb4565b600061253e565b61263357612709565b926125ec5750565b6125f7600080612562565b61262e7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161262560405190565b91829182612582565b0390a1565b61263e876000612562565b612709565b506126586125a8612653306109ea565b612a4c565b80156125bb57506125c461266c60006124b8565b6126806126796001610bb4565b9160ff1690565b1490506125bb565b5061269360006124b8565b6126a06126796001610bb4565b106125b4565b67ffffffffffffffff8111610b7157602090601f01601f19160190565b90826000939282370152565b909291926126e46126df826126a6565b611114565b938185526020850190828401116101d25761029c926126c3565b6102439136916126cf565b612734936127296127399661272f935061272386866126fe565b926126fe565b90612817565b6126fe565b612a43565b6127416129e7565b610c306127d4565b610243939291906000612592565b1561275e57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6127c96127c460006124a5565b612757565b61029c61029c6127f3565b61029c6127b7565b6127e96127c460006124a5565b61029c8033610a0e565b61029c6127dc565b9061029c9161280d6127c460006124a5565b9061029c916129d0565b9061029c916127fb565b9061029c916128336127c460006124a5565b6129ba565b9160001960089290920291821b911b6109c3565b919061285d610243610a0a93610e52565b908354612838565b61029c9160009161284c565b81811061287c575050565b8061288a6000600193612865565b01612871565b9190601f811161289f57505050565b6128b161029c93600052602060002090565b906020601f8401819004830193106128d3575b6020601f909101040190612871565b90915081906128c4565b906128e6815190565b9067ffffffffffffffff8211610b715761290a826129048554610a81565b85612890565b602090601f831160011461294557610a0a92916000918361293a575b5050600019600883021c1916906002021790565b015190503880612926565b601f1983169161295a85600052602060002090565b9260005b8181106129985750916002939185600196941061297f575b50505002019055565b01516000196008601f8516021c19169055388080612976565b9193602060018192878701518155019501920161295e565b9061029c916128dd565b906129c961029c9260366129b0565b60376129b0565b9061029c91612821565b61029c6127c460006124a5565b61029c6129da565b61029c90612a006127c460006124a5565b612a31565b906120066126df836126a6565b612a1c6001612a05565b603160f81b602082015290565b610243612a12565b61029c90612a3d612a29565b90612abf565b61029c906129ef565b3b612a5a6115e66000610e52565b1190565b9061029c91612a706127c460006124a5565b612a83565b90610e6f610243610a0a9290565b90612ab8612aa4612a9461029c9490565b612a9f611644825190565b209290565b612aaf611644825190565b20916065612a75565b6066612a75565b9061029c91612a5e565b9061029c929190612ae6612ae061029c9493611250565b91611250565b906116fa565b9061029c91612af96108ea565b9061029c91612b0d565b9061029c91612aec565b9061029c91612b7c565b15612b1e57565b60405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608490fd5b90612b8a8161176893612c04565b612baf612b95610be2565b612ba86115e66001600160e01b0361128e565b1115612b17565b60ce6002611787565b15612bbf57565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b9061029c91612c136000610873565b612c316001600160a01b0382166001600160a01b0384161415612bb8565b612c49612c4284610cb26035610bd8565b6035610e5f565b610f06610ef3836033610bec565b634e487b7160e01b600052605160045260246000fd5b91909180600214612c8857600103612c575761024391611a9b565b5061024391611a9156fea26469706673582212209ce27e1d0a73e73920604ea227c5d49ed943a399ba3235f4b510332123019efa64736f6c63430008120033";

type ERC20VotesStandardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VotesStandardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20VotesStandard__factory extends ContractFactory {
  constructor(...args: ERC20VotesStandardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20VotesStandard> {
    return super.deploy(overrides || {}) as Promise<ERC20VotesStandard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20VotesStandard {
    return super.attach(address) as ERC20VotesStandard;
  }
  override connect(signer: Signer): ERC20VotesStandard__factory {
    return super.connect(signer) as ERC20VotesStandard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VotesStandardInterface {
    return new utils.Interface(_abi) as ERC20VotesStandardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20VotesStandard {
    return new Contract(address, _abi, signerOrProvider) as ERC20VotesStandard;
  }
}
