/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Token, TokenInterface } from "../../../contracts/Token.sol/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialTaxRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_TAX_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_SEED_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_PRESALE_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_LIQUIDITY_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_CEX_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_MARKETING_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_RESEARCH_RECEIVER",
        type: "address",
      },
      {
        internalType: "address",
        name: "_STACKING_RECEIVER",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "TaxRateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CEX_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CEX_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDITY_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDITY_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARKETING_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARKETING_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRESALE_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRESALE_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESEARCH_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESEARCH_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEED_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEED_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STACKING_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STACKING_TOKENOMICS_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TAX_RECEIVER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "changeTaxRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenomicsTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052346200060357620016a2803803806200001d8162000608565b928339810161018082820312620006035781516001600160401b0381116200060357816200004d9184016200062e565b602083015190916001600160401b0382116200060357620000709184016200062e565b916040810151906060810151936200008b60808301620006a0565b906200009a60a08401620006a0565b91620000a960c08501620006a0565b90620000b860e08601620006a0565b90620000c86101008701620006a0565b91620000d86101208801620006a0565b94620000f7610160620000ef6101408b01620006a0565b9901620006a0565b8a51909a6001600160401b038211620004d65760035490600182811c92168015620005f8575b6020831014620004b55781601f84931162000583575b50602090601f8311600114620004f857600092620004ec575b50508160011b916000199060031b1c1916176003555b8051906001600160401b038211620004d65760045490600182811c92168015620004cb575b6020831014620004b55781601f84931162000443575b50602090601f8311600114620003b457600092620003a8575b50508160011b916000199060031b1c1916176004555b60058054336001600160a01b0319821681179092556040516001600160a01b039c9290918d167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36008600655600f6007556016600855600d600955600d600a55600e600b55600f600c55601260ff19601754161760175533156200036657506002549489860180961162000350578b809a9881809a9681999582988397600255336000526000602052604060002081815401905560405181815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36015556016551660018060a01b0319600d541617600d551660018060a01b0319600e541617600e551660018060a01b0319600f541617600f551660018060a01b031960105416176010551660018060a01b031960115416176011551660018060a01b031960125416176012551660018060a01b031960135416176013551660018060a01b03196014541617601455604051610fec9081620006b68239f35b634e487b7160e01b600052601160045260246000fd5b62461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b015190503880620001b6565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91905b601f198416851062000427576001945083601f198116106200040d575b505050811b01600455620001cc565b015160001960f88460031b161c19169055388080620003fe565b81810151835560209485019460019093019290910190620003e1565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c810160208510620004ad575b90849392915b601f830160051c820181106200049d5750506200019d565b6000815585945060010162000485565b50806200047f565b634e487b7160e01b600052602260045260246000fd5b91607f169162000187565b634e487b7160e01b600052604160045260246000fd5b0151905038806200014c565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b8181106200056a575090846001959493921062000550575b505050811b0160035562000162565b015160001960f88460031b161c1916905538808062000541565b9293602060018192878601518155019501930162000529565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c81019160208510620005ed575b90601f859493920160051c01905b818110620005dd575062000133565b60008155849350600101620005ce565b9091508190620005c0565b91607f16916200011d565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620004d657604052565b919080601f84011215620006035782516001600160401b038111620004d65760209062000664601f8201601f1916830162000608565b92818452828287010111620006035760005b8181106200068c57508260009394955001015290565b858101830151848201840152820162000676565b51906001600160a01b0382168203620006035756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde0314610b4957508063095ea7b314610b1f57806318160ddd14610b005780631991b2d214610ae157806323b872dd146109e3578063313ce567146109c757806339509351146109605780633be0f4af1461089557806348af25ce1461086c578063654f4ab91461084d5780636c383967146108245780636fd2b957146107fb57806370a08231146107c4578063715018a614610767578063771a3a1d14610748578063787cf3ef1461071f5780638da5cb5b146106f65780639404b618146106d757806395d89b41146105b757806398ffcdab14610598578063a2bf9c181461056f578063a457c2d7146104c8578063a9059cbb14610445578063ae30a79714610426578063c20623bf14610407578063c91e6a38146103de578063d21967f0146103b5578063dd62ed3e1461036c578063e85a470914610343578063eb9943d914610274578063f069e358146102515763f2fde38b1461018357600080fd5b3461024d57602036600319011261024d5761019c610c87565b906101a5610cb8565b6001600160a01b039182169283156101fb575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b505034610270578160031936011261027057602090600b549051908152f35b5080fd5b50903461024d57602036600319011261024d57813591610292610cb8565b821561030a57600a8310156102d35750816020917fbe89dc2f9769e9896808a0f0983380fed3225e0784b99b98d3eec9ccb50185289360165551908152a180f35b6020606492519162461bcd60e51b835282015260126024820152710546178206d757374206265203c3d203130360741b6044820152fd5b6020606492519162461bcd60e51b83528201526014602482015273546178206d75737420626520706f73697469766560601b6044820152fd5b505034610270578160031936011261027057600f5490516001600160a01b039091168152602090f35b5050346102705780600319360112610270578060209261038a610c87565b610392610ca2565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50503461027057816003193601126102705760125490516001600160a01b039091168152602090f35b50503461027057816003193601126102705760145490516001600160a01b039091168152602090f35b505034610270578160031936011261027057602090600c549051908152f35b5050346102705781600319360112610270576020906009549051908152f35b505034610270578060031936011261027057602090610462610c87565b602435606461047360165483610e12565b0461047e8183610e3b565b600d546001600160a01b03919033908316036104a8575050506104a19133610e48565b5160018152f35b6104b9919293506104c39433610e48565b600d541633610e48565b6104a1565b50823461056c578260031936011261056c576104e2610c87565b918360243592338152600160205281812060018060a01b038616825260205220549082821061051b576020856104a18585038733610d10565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b50503461027057816003193601126102705760105490516001600160a01b039091168152602090f35b5050346102705781600319360112610270576020906006549051908152f35b50919034610270578160031936011261027057805190828454600181811c908083169283156106cd575b60209384841081146106ba5783885290811561069e5750600114610649575b505050829003601f01601f191682019267ffffffffffffffff8411838510176106365750829182610632925282610c3e565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061068a5750505050830101388080610600565b805488860183015293019284908201610674565b60ff1916878501525050151560051b8401019050388080610600565b634e487b7160e01b895260228a52602489fd5b91607f16916105e1565b505034610270578160031936011261027057602090600a549051908152f35b50503461027057816003193601126102705760055490516001600160a01b039091168152602090f35b50503461027057816003193601126102705760115490516001600160a01b039091168152602090f35b5050346102705781600319360112610270576020906016549051908152f35b833461056c578060031936011261056c57610780610cb8565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102705760203660031901126102705760209181906001600160a01b036107ec610c87565b16815280845220549051908152f35b505034610270578160031936011261027057600e5490516001600160a01b039091168152602090f35b50503461027057816003193601126102705760135490516001600160a01b039091168152602090f35b5050346102705781600319360112610270576020906007549051908152f35b505034610270578160031936011261027057600d5490516001600160a01b039091168152602090f35b5050346102705781600319360112610270576020906104a160018060a01b036108d66108d682600e5416926108de6015948554606495869160065490610e12565b049033610e48565b6108f581600f5416846108d6875460075490610e12565b61090c8160105416846108d6875460085490610e12565b6109238160115416846108d6875460095490610e12565b61093a8160125416846108d68754600a5490610e12565b6109518160135416846108d68754600b5490610e12565b601454169254600c5490610e12565b50913461056c578160031936011261056c5761097a610c87565b338252600160209081528383206001600160a01b03831684529052828220546024358101929083106109b4576020846104a1858533610d10565b634e487b7160e01b815260118552602490fd5b5050346102705781600319360112610270576020905160128152f35b50823461056c57606036600319011261056c576109fe610c87565b90610a07610ca2565b92604435936064610a1a60165487610e12565b0494610a268682610e3b565b928760018060a01b0395868816815260016020528181203382526020522054906000198203610a6e575b6020896104a18a8a8a610a648b8b84610e48565b600d541690610e48565b828210610a9e575092602097969492610a91610a64936104a19896033387610d10565b9294969781949650610a50565b60649060208a519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346102705781600319360112610270576020906008549051908152f35b5050346102705781600319360112610270576020906002549051908152f35b5050346102705780600319360112610270576020906104a1610b3f610c87565b6024359033610d10565b849150833461024d578260031936011261024d5782600354600181811c90808316928315610c34575b60209384841081146106ba57838852908115610c185750600114610bc257505050829003601f01601f191682019267ffffffffffffffff8411838510176106365750829182610632925282610c3e565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838510610c045750505050830101858080610600565b805488860183015293019284908201610bee565b60ff1916878501525050151560051b8401019050858080610600565b91607f1691610b72565b6020808252825181830181905290939260005b828110610c7357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610c51565b600435906001600160a01b0382168203610c9d57565b600080fd5b602435906001600160a01b0382168203610c9d57565b6005546001600160a01b03163303610ccc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03908116918215610dc15716918215610d715760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b81810292918115918404141715610e2557565b634e487b7160e01b600052601160045260246000fd5b91908203918211610e2557565b6001600160a01b03908116918215610f635716918215610f1257600082815280602052604081205491808310610ebe57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fdfea2646970667358221220eb08bdac5e77aea1e29530d37ce90927fd04141c530e5355f1f8c819adbd0e3964736f6c63430008120033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    initialTaxRate: PromiseOrValue<BigNumberish>,
    _TAX_RECEIVER: PromiseOrValue<string>,
    _SEED_RECEIVER: PromiseOrValue<string>,
    _PRESALE_RECEIVER: PromiseOrValue<string>,
    _LIQUIDITY_RECEIVER: PromiseOrValue<string>,
    _CEX_RECEIVER: PromiseOrValue<string>,
    _MARKETING_RECEIVER: PromiseOrValue<string>,
    _RESEARCH_RECEIVER: PromiseOrValue<string>,
    _STACKING_RECEIVER: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      initialTaxRate,
      _TAX_RECEIVER,
      _SEED_RECEIVER,
      _PRESALE_RECEIVER,
      _LIQUIDITY_RECEIVER,
      _CEX_RECEIVER,
      _MARKETING_RECEIVER,
      _RESEARCH_RECEIVER,
      _STACKING_RECEIVER,
      overrides || {}
    ) as Promise<Token>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    initialTaxRate: PromiseOrValue<BigNumberish>,
    _TAX_RECEIVER: PromiseOrValue<string>,
    _SEED_RECEIVER: PromiseOrValue<string>,
    _PRESALE_RECEIVER: PromiseOrValue<string>,
    _LIQUIDITY_RECEIVER: PromiseOrValue<string>,
    _CEX_RECEIVER: PromiseOrValue<string>,
    _MARKETING_RECEIVER: PromiseOrValue<string>,
    _RESEARCH_RECEIVER: PromiseOrValue<string>,
    _STACKING_RECEIVER: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      initialTaxRate,
      _TAX_RECEIVER,
      _SEED_RECEIVER,
      _PRESALE_RECEIVER,
      _LIQUIDITY_RECEIVER,
      _CEX_RECEIVER,
      _MARKETING_RECEIVER,
      _RESEARCH_RECEIVER,
      _STACKING_RECEIVER,
      overrides || {}
    );
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
